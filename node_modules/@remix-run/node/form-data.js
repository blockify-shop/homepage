/**
 * @remix-run/node v1.0.6
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

class RemixFormData {
  constructor(body) {
    this._params = new URLSearchParams(body);
  }

  append(name, value, fileName) {
    if (typeof value !== "string") {
      throw new Error("formData.append can only accept a string");
    }

    this._params.append(name, value);
  }

  delete(name) {
    this._params.delete(name);
  }

  get(name) {
    return this._params.get(name);
  }

  getAll(name) {
    return this._params.getAll(name);
  }

  has(name) {
    return this._params.has(name);
  }

  set(name, value, fileName) {
    if (typeof value !== "string") {
      throw new Error("formData.set can only accept a string");
    }

    this._params.set(name, value);
  }

  forEach(callbackfn, thisArg) {
    this._params.forEach(callbackfn, thisArg);
  }

  entries() {
    return this._params.entries();
  }

  keys() {
    return this._params.keys();
  }

  values() {
    return this._params.values();
  }

  *[Symbol.iterator]() {
    yield* this._params;
  }

}

exports.RemixFormData = RemixFormData;
